enum Can {
  giap,
  at,
  binh,
  dinh,
  mau,
  ky,
  canh,
  tan,
  nham,
  quy;
}

enum Chi {
  ti,
  suu,
  dan,
  mao,
  thin,
  ty,
  ngo,
  mui,
  than,
  dau,
  tuat,
  hoi;
}

enum CanChi {
  giapTi(Can.giap, Chi.ti),
  atSuu(Can.at, Chi.suu),
  binhDan(Can.binh, Chi.dan),
  dinhMao(Can.dinh, Chi.mao),
  mauThin(Can.mau, Chi.thin),
  kyTy(Can.ky, Chi.ty),
  canhNgo(Can.canh, Chi.ngo),
  tanMui(Can.tan, Chi.mui),
  nhamThan(Can.nham, Chi.than),
  quyDau(Can.quy, Chi.dau),
  giapTuat(Can.giap, Chi.tuat),
  atHoi(Can.at, Chi.hoi),
  binhTi(Can.binh, Chi.ti),
  dinhSuu(Can.dinh, Chi.suu),
  mauDan(Can.mau, Chi.dan),
  kyMao(Can.ky, Chi.mao),
  canhThin(Can.canh, Chi.thin),
  tanTy(Can.tan, Chi.ty),
  nhamNgo(Can.nham, Chi.ngo),
  quyMui(Can.quy, Chi.mui),
  giapThan(Can.giap, Chi.than),
  atDau(Can.at, Chi.dau),
  binhTuat(Can.binh, Chi.tuat),
  dinhHoi(Can.dinh, Chi.hoi),
  mauTi(Can.mau, Chi.ti),
  kySuu(Can.ky, Chi.suu),
  canhDan(Can.canh, Chi.dan),
  tanMao(Can.tan, Chi.mao),
  nhamThin(Can.nham, Chi.thin),
  quyTy(Can.quy, Chi.ty),
  giapNgo(Can.giap, Chi.ngo),
  atMui(Can.at, Chi.mui),
  binhThan(Can.binh, Chi.than),
  dinhDau(Can.dinh, Chi.dau),
  mauTuat(Can.mau, Chi.tuat),
  kyHoi(Can.ky, Chi.hoi),
  canhTi(Can.canh, Chi.ti),
  tanSuu(Can.tan, Chi.suu),
  nhamDan(Can.nham, Chi.dan),
  quyMao(Can.quy, Chi.mao),
  giapThin(Can.giap, Chi.thin),
  atTy(Can.at, Chi.ty),
  binhNgo(Can.binh, Chi.ngo),
  dinhMui(Can.dinh, Chi.mui),
  mauThan(Can.mau, Chi.than),
  kyDau(Can.ky, Chi.dau),
  canhTuat(Can.canh, Chi.tuat),
  tanHoi(Can.tan, Chi.hoi),
  nhamTi(Can.nham, Chi.ti),
  quySuu(Can.quy, Chi.suu),
  giapDan(Can.giap, Chi.dan),
  atMao(Can.at, Chi.mao),
  binhThin(Can.binh, Chi.thin),
  dinhTy(Can.dinh, Chi.ty),
  mauNgo(Can.mau, Chi.ngo),
  kyMui(Can.ky, Chi.mui),
  canhThan(Can.canh, Chi.than),
  tanDau(Can.tan, Chi.dau),
  nhamTuat(Can.nham, Chi.tuat),
  quyHoi(Can.quy, Chi.hoi);

  const CanChi(this.can, this.chi);

  final Can can;
  final Chi chi;
}
